{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/User.ts","./src/app/user-view/user-view.component.ts","./src/app/user-view/user-view.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { UserViewComponent } from './user-view/user-view.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n\n\nconst appRoutes: Routes = [\n  { path: '', component: UsersComponent},\n  { path: 'user/:id', component: UserViewComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    UserViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\n\n","export class User {\r\n  public id: number;\r\n  public firstName: string;\r\n  public lastName: string;\r\n  public genre: string;\r\n  public email: string;\r\n  public phone: number;\r\n  public country: string;\r\n}\r\n","import {Component, Injectable, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.css']\n})\n\nexport class UserViewComponent implements OnInit {\n  id: number;\n  user: User = new User();\n\n  constructor(private http: HttpClient, private router: ActivatedRoute, private route: Router) { }\n\n  getUser(id) {\n    return this.http\n      .get<User>('http://localhost:8080/users/' + id).subscribe(data => {\n        this.user.id = data.id;\n        this.user.email = data.email;\n        this.user.firstName = data.firstName;\n        this.user.lastName = data.lastName;\n        this.user.genre = data.genre;\n        this.user.phone = data.phone;\n        this.user.country = data.country;\n      });\n  }\n\n  createUser(user) {\n    return this.http\n      .post<User>('http://localhost:8080/users', user).subscribe( () => this.route.navigate(['/']));\n  }\n\n  updateUser(user) {\n    return this.http\n      .put<User>('http://localhost:8080/users/' + user.id, user).subscribe( () => this.route.navigate(['/']));\n  }\n\n\n  ngOnInit(): void {\n    this.id = +this.router.snapshot.paramMap.get('id');\n    if(this.id > -1) {\n      this.getUser(this.id);\n    }\n  }\n\n}\n","<div class=\"container\">\n  <h1>User details</h1>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" required [(ngModel)]=\"user.firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" required [(ngModel)]=\"user.lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"genre\">Genre</label>\n      <select class=\"form-control\" id=\"genre\" name=\"genre\" required [(ngModel)]=\"user.genre\">\n        <option>man</option>\n        <option>woman</option>\n      </select>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" required [(ngModel)]=\"user.email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone</label>\n      <input type=\"number\" class=\"form-control\" id=\"phone\" name=\"phone\" required [(ngModel)]=\"user.phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"country\">Country</label>\n      <select class=\"form-control\" id=\"country\" name=\"country\" required [(ngModel)]=\"user.country\">\n        <option selected>France</option>\n        <option>China</option>\n        <option>USA</option>\n        <option>Congo</option>\n        <option>Brazil</option>\n      </select>\n    </div>\n\n    <button *ngIf=\"id > -1\" type=\"submit\" class=\"btn btn-success\" (click)=\"updateUser(user)\">update</button>\n    <button *ngIf=\"id == -1\" type=\"submit\" class=\"btn btn-success\" (click)=\"createUser(user)\">Create</button>\n\n  </form>\n</div>\n","import { Component, NgModule, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport * as axios from 'axios';\nimport {Router} from '@angular/router';\nimport { User } from '../models/User';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\n\n@Injectable()\nexport class UsersComponent implements OnInit {\n\n  headers = ['id', 'Firstname', 'LastName', 'Email', 'Phone', 'Country', 'Update', 'Delete'];\n  users: User[];\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getUsers() {\n    return axios.default.get('http://localhost:8080/users').then(data => {\n      this.users = data.data._embedded.users;\n      console.log(this.users);\n    });\n  }\n  deleteUser(id) {\n    if (confirm('Are you sure')) {\n      return this.http.delete('http://localhost:8080/users/' + id).subscribe(() => this.getUsers());\n    } else {\n      return null;\n    }\n  }\n  initUser(id) {\n    this.router.navigate(['/user/' + id]).then(r => '/');\n  }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n}\n","<div class=\"container\">\n  <h2>User's List</h2>\n  <div class=\"row\">\n    <table class=\"table\">\n      <thead>\n      <tr>\n        <th scope=\"col\" *ngFor=\"let name of headers\">{{name}}</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td scope=\"row\" >{{user.id}}</td>\n        <td scope=\"row\" >{{user.firstName}}</td>\n        <td scope=\"row\" >{{user.lastName}}</td>\n        <td scope=\"row\" >{{user.email}}</td>\n        <td scope=\"row\" >{{user.phone}}</td>\n        <td scope=\"row\" >{{user.country}}</td>\n        <td scope=\"row\" >\n          <button class=\"btn btn-primary\" (click)=\"initUser(user.id)\">Update</button>\n        </td>\n        <td scope=\"row\" >\n          <button class=\"btn btn-warning\" (click)=\"deleteUser(user.id)\">Delete</button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"col\">\n      <button class=\"btn btn-success\" (click)=\"initUser(-1)\">Add</button>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}